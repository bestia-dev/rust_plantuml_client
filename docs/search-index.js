var searchIndex = JSON.parse('{\
"rust_plantuml_client":{"doc":"rust_plantuml_client","t":"ENNLLFLLLFLALLLLLFF","n":["LibraryError","Unknown","Uppercase","borrow","borrow_mut","compress_plant_uml_code","fmt","fmt","from","get_svg","into","plantuml_mod","provide","to_string","try_from","try_into","type_id","compress_plant_uml_code","get_svg"],"q":["rust_plantuml_client","","","","","","","","","","","","","","","","","rust_plantuml_client::plantuml_mod",""],"d":["all possible library errors for <code>thiserror</code>","","","","","deflate and strange base64, that is Url_safe","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","All the real code is inside modules in separate files.","","","","","","deflate and strange base64, that is Url_safe",""],"i":[0,3,3,3,3,0,3,3,3,0,3,0,3,3,3,3,3,0,0],"f":[0,0,0,[[]],[[]],[1,2],[[3,4],5],[[3,4],5],[[]],[1,2],[[]],0,[6],[[],2],[[],7],[[],7],[[],8],[1,2],[1,2]],"p":[[15,"str"],[3,"String"],[4,"LibraryError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
