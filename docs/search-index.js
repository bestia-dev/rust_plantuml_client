var searchIndex = JSON.parse('{\
"rust_plantuml_client":{"doc":"rust_plantuml_client","t":[4,13,13,11,11,5,11,11,11,5,11,0,11,11,11,11,12,5,5],"n":["LibraryError","Unknown","Uppercase","borrow","borrow_mut","compress_plant_uml_code","fmt","fmt","from","get_svg","into","plantuml_mod","to_string","try_from","try_into","type_id","0","compress_plant_uml_code","get_svg"],"q":["rust_plantuml_client","","","","","","","","","","","","","","","","rust_plantuml_client::LibraryError","rust_plantuml_client::plantuml_mod",""],"d":["all possible library errors for <code>thiserror</code>","","","","","deflate and strange base64, that is Url_safe","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","All the real code is inside modules in separate files.","","","","","","deflate and strange base64, that is Url_safe",""],"i":[0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,2,0,0],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["string",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["str",0]],["string",3]],[[]],null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["str",0]],["string",3]],[[["str",0]],["string",3]]],"p":[[4,"LibraryError"],[13,"Uppercase"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};